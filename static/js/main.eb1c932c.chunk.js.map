{"version":3,"sources":["components/app/App.js","components/result/result.js","components/numbers/numbers.js","components/symbols/symbols.js","index.js"],"names":["App","props","clear","setState","result","currentNum","temporaryRes","formula","state","onClickNum","bind","onClickSym","countRes","value","fullNum","this","newFormula","push","console","log","eval","join","res","className","React","Component","Result","Numbers","remember","e","target","textContent","map","item","type","onClick","id","Symbols","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oxEAMMA,I,0UACF,aAAYC,GAAQ,IAAD,6JACf,mBAAOA,IAoDXC,MAAQ,WACN,EAAKC,SAAS,CACVC,OAAQ,EACRC,WAAY,GACZC,aAAc,GACdC,QAAS,MAvDX,EAAKC,MAAQ,CACTJ,OAAQ,IACRC,WAAY,GACZE,QAAS,IAGb,EAAKE,WAAa,EAAKA,WAAWC,KAAhB,oJAClB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,oJAClB,EAAKE,SAAW,EAAKA,SAASF,KAAd,oJAXD,E,mLAcRG,GACP,IAAIC,EAAUC,KAAKP,MAAMH,WAAaQ,EACtCE,KAAKZ,SAAS,CACVC,OAAQU,IAEZC,KAAKZ,SAAS,CACVE,WAAYS,M,iCAIRD,GACR,IAAIG,EAAU,4IAAOD,KAAKP,MAAMD,SACL,KAAvBQ,KAAKP,MAAMD,QACXS,EAAWC,KAAKF,KAAKP,MAAMJ,QAE3BY,EAAWC,KAAKF,KAAKP,MAAMH,YAC3BW,EAAWC,KAAKJ,GAChBK,QAAQC,IAAIH,GACZD,KAAKZ,SAAS,CACVI,QAASS,EACTX,WAAY,O,wtBAKOU,KAAKP,MAAMD,S,cAAlCS,W,8BACEA,WAAWC,KAAKF,KAAKP,MAAMH,Y,8BAC3BU,KAAKZ,SAAS,CAChBI,QAASS,a,8BAEGI,KAAKL,KAAKP,MAAMD,QAAQc,KAAK,M,cAAzCC,I,+BACEJ,QAAQC,IAAIG,K,gCACZP,KAAKZ,SAAS,CAChBC,OAASkB,IACTjB,WAAYiB,IACZf,QAAS,K,4KAcf,OACI,kEAAKgB,UAAU,MAAf,SACI,mEAAKA,UAAU,sBAAf,UACI,kEAAKA,UAAU,uCAAf,SACI,kEAAKA,UAAU,MAAf,SACI,2DAAC,8CAAD,CAAQD,IAAKP,KAAKP,MAAMJ,aAGpC,6EACI,2EACI,2DAAC,iDAAD,CACSK,WAAYM,KAAKN,WACjBP,MAAOa,KAAKb,UAIzB,2EACI,2DAAC,iDAAD,CAASS,WAAYI,KAAKJ,WACjBC,SAAUG,KAAKH,yB,KAlF5BY,8CAAMC,WA4FTzB,2B,2CC1FA0B,IARA,SAAC,GAAW,IAAVJ,EAAS,EAATA,IACf,OACI,8BACI,oBAAIC,UAAU,yBAAd,SAAwCD,Q,mDCmBnCK,IAnBC,SAAC,GAAyB,IAAxBlB,EAAuB,EAAvBA,WAAYP,EAAW,EAAXA,MAG1B,SAAS0B,EAAUC,GAChBpB,EAAWoB,EAAEC,OAAOC,aAGvB,OACI,qBAAKR,UAAU,oBAAf,SACI,sBAAKA,UAAU,MAAf,UARQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAS3BS,KAAI,SAACC,GAAD,OACT,wBAAQC,KAAK,SAASX,UAAU,2BAA2BY,QAASP,EAApE,SAA+EK,OAE/E,wBAAQC,KAAK,SAASX,UAAU,yBAAyBa,GAAG,QAAQD,QAASjC,EAA7E,0B,mDCKDmC,IAlBC,SAAC,GAA4B,IAA3B1B,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,SAE1B,SAASiB,EAAEA,GACPlB,EAAWkB,EAAEC,OAAOC,aAGxB,OACI,qBAAKR,UAAU,YAAf,SACI,sBAAKA,UAAU,MAAf,UAPO,CAAC,IAAK,IAAK,IAAK,KAQfS,KAAI,SAACC,GAAD,OACR,wBAAQC,KAAK,SAASX,UAAU,mCAAmCY,QAASN,EAA5E,SAAgFI,OAEhF,wBAAQC,KAAK,SAASX,UAAU,iCAAiCa,GAAG,QAAQD,QAASvB,EAArF,sB,wFCXhB0B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.eb1c932c.chunk.js","sourcesContent":["import Result from '../result/result';\nimport React from 'react'\nimport Numbers from '../numbers/numbers'\nimport Symbols from '../symbols/symbols';\nimport './app.css';\n\nclass App extends React.Component {\n    constructor(props) {\n        super (props);\n\n        this.state = {\n            result: '0',\n            currentNum: '',\n            formula: []\n        };\n\n        this.onClickNum = this.onClickNum.bind(this);\n        this.onClickSym = this.onClickSym.bind(this);\n        this.countRes = this.countRes.bind(this);\n    }\n\n    onClickNum(value) {\n        let fullNum = this.state.currentNum + value;\n        this.setState({\n            result: fullNum\n        });\n        this.setState({\n            currentNum: fullNum\n        });\n    }\n\n    onClickSym (value) {\n        let newFormula = [...this.state.formula];\n        if (this.state.formula === \"\") {\n            newFormula.push(this.state.result)\n        } else\n            newFormula.push(this.state.currentNum);\n            newFormula.push(value);\n            console.log(newFormula);\n            this.setState({\n                formula: newFormula,\n                currentNum: ''\n            });\n    };\n\n    async countRes () {\n        let newFormula = await [...this.state.formula];\n        await newFormula.push(this.state.currentNum);\n        await this.setState({\n            formula: newFormula\n        });\n        let res = await eval(this.state.formula.join(' '));\n        await console.log(res);\n        await this.setState({\n            result : res,\n            currentNum: res,\n            formula: ''\n      });\n    };\n\n    clear = () => {\n      this.setState({\n          result: 0,\n          currentNum: '',\n          temporaryRes: '',\n          formula: ''\n      })\n    };\n\n  render () {\n      return (\n          <div className=\"app\">\n              <div className='calc-body shadow-lg'>\n                  <div className=\"align-items-start result rounded-top\">\n                      <div className=\"col\">\n                          <Result res={this.state.result}/>\n                      </div>\n                  </div>\n              <div>\n                  <div>\n                      <Numbers\n                               onClickNum={this.onClickNum}\n                               clear={this.clear}\n                      />\n\n                  </div>\n                  <div>\n                      <Symbols onClickSym={this.onClickSym}\n                               countRes={this.countRes}\n                               />\n                  </div>\n                  </div>\n              </div>\n          </div>\n      )\n  }\n}\n\nexport default App;\n","const Result = ({res}) => {\n  return (\n      <div>\n          <h2 className='text-right result-text'>{res}</h2>\n      </div>\n  )\n};\n\nexport default Result;","import React from 'react';\nimport './numbers.css';\n\nconst Numbers = ({onClickNum, clear}) => {\n    const numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 0];\n\n    function remember (e) {\n       onClickNum(e.target.textContent);\n    }\n\n    return (\n        <div className='container numbers'>\n            <div className='row'>\n            {numbers.map((item) =>\n                <button type=\"button\" className=\"btn btn-secondary number\" onClick={remember}>{item}</button>\n            )}\n                <button type=\"button\" className=\"btn btn-warning btn-lg\" id='clear' onClick={clear}>Clear</button>\n            </div>\n        </div>\n    )\n};\n\nexport default Numbers;","import React from 'react';\nimport './symbols.css'\n\nconst Symbols = ({onClickSym, countRes}) => {\n    const symbol = ['+', '-', '*', '/'];\n    function e(e) {\n        onClickSym(e.target.textContent)\n    }\n\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n            {symbol.map((item) =>\n                <button type=\"button\" className=\"btn btn-outline-dark btn-lg symb\" onClick={e}>{item}</button>\n            )}\n                <button type=\"button\" className=\"btn btn-outline-success btn-lg\" id='count' onClick={countRes}>=</button>\n            </div>\n        </div>\n    )\n};\n\nexport default Symbols;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}